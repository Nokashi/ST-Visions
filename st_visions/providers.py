from bokeh.models import WMTSTileSource
from loguru import logger
import sys

"""
providers.py - v2025.07.12

Provider Module for ST_Visions, handles map tile behavior for the figures generated by
VISIONS instances 
"""

# Built-in tile sources configuration, not itilizated to give window for keyword arguments
DEFAULT_TILE_SOURCES = {
    "OSM": {
        "url": "https://tile.openstreetmap.org/{Z}/{X}/{Y}.png",
        "attribution": "© OpenStreetMap contributors"
    },
    "STAMEN_TERRAIN": {
        "url": "https://stamen-tiles.a.ssl.fastly.net/terrain/{Z}/{X}/{Y}.png",
        "attribution": "Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under ODbL"
    },
    "STAMEN_TONER": {
        "url": "https://stamen-tiles.a.ssl.fastly.net/toner/{Z}/{X}/{Y}.png",
        "attribution": "Map tiles by Stamen Design, under CC BY 3.0. Data by OpenStreetMap, under ODbL"
    },
    "CARTODBPOSITRON": {
        "url": "https://cartodb-basemaps-a.global.ssl.fastly.net/light_all/{Z}/{X}/{Y}.png",
        "attribution": "© OpenStreetMap contributors © CARTO"
    }
}

def get_tile(tile_provider="CARTODBPOSITRON", **kwargs):
    """Get a tile source by name or return custom source directly.

    Parameters
    ----------
    tile_provider : str or WMTSTileSource
        Either provider name string or existing tile source.
        Default: "CARTODBPOSITRON"
    **kwargs : dict
        Additional arguments to pass to WMTSTileSource constructor.

    Returns
    -------
    WMTSTileSource
        Configured tile source.

    Raises
    ------
    ValueError
        If provider name is not recognized in the default tile sources.
    """
    if isinstance(tile_provider, WMTSTileSource):
        return tile_provider
        
    #string failsafe
    tile_provider = tile_provider.upper()
    if tile_provider not in DEFAULT_TILE_SOURCES:
        logger.error(f"Provider must be one of the following: {list(DEFAULT_TILE_SOURCES.keys())}")
        sys.exit(1)
        # raise ValueError(f"Provider must be one of the following: {list(DEFAULT_TILE_SOURCES.keys())}")
    
    return WMTSTileSource(**{**DEFAULT_TILE_SOURCES[tile_provider], **kwargs})

def add_tile_to_canvas(obj, tile_provider='CARTODBPOSITRON', **kwargs):
    """
    Add a tile layer to the specified figure.

    Parameters
    ----------
    obj: st_visualizer 
        A VISIONS instance
    tile_provider : str or WMTSTileSource
        Either a provider name string (e.g., 'osm') from the allowed or
        an existing WMTSTileSource instance.
    **kwargs : dict, optional
        Additional keyword arguments to pass to the WMTSTileSource constructor.
        Consult the Bokeh docs for additional information on possible arguments.

        Source: https://docs.bokeh.org/en/latest/docs/reference/models/tiles.html#bokeh.models.WMTSTileSource

        Common options include:
        - alpha: float (opacity value between 0 and 1)
        - level: str (render level for the tile layer)

    Examples
    --------
    >>> add_tile_to_figure(fig, 'OSM') # built-in tile source
    >>> add_tile_to_figure(fig, custom_tile, alpha=0.7) # custom 
    """
    obj.figure.add_tile(get_tile(tile_provider, **kwargs))